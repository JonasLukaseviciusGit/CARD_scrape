import json
import matplotlib.pyplot as plt

file_path = r"C:\Users\HP\Desktop\CARD\google_scholar\pain_management.json"

def modify_urls(json_data):
    modified_urls = []

    for page_data in json_data:
        urls = page_data.get("urls", [])
        for url in urls:
            if 'https://' in url:
                modified_url = url.split('https://')[1].split('/')[0]
                modified_urls.append(modified_url)
            else:
                modified_urls.append(url)

    return modified_urls

def rank_and_count(modified_urls):
    url_count = {}

    for url in modified_urls:
        if url in url_count:
            url_count[url] += 1
        else:
            url_count[url] = 1

    ranked_urls = sorted(url_count.items(), key=lambda x: x[1], reverse=True)

    return ranked_urls

try:
    with open(file_path, 'r') as file:
        data = [json.loads(line) for line in file]

    modified_urls = modify_urls(data)
    ranked_urls = rank_and_count(modified_urls)
    for url in ranked_urls:
        link = f'https://{url[0]}'.replace(' ', '')
        url = f'{link:<50} {url[1]:>5}'
        print(url)

    # Get the first 9 elements and their counts
    histogram_first_9 = ranked_urls[:9]

    # Sum counts of all other elements
    sum_of_others = sum(count for url, count in ranked_urls[9:])

    # Extract data for plotting
    labels, counts = zip(*histogram_first_9)
    labels += ('Other',)  # Add 'Other' label for the sum of others
    counts += (sum_of_others,)

    # Plot the histogram
    plt.bar(labels, counts)
    plt.xlabel('URLs')
    plt.ylabel('Count')
    plt.title('Histogram of URLs')
    plt.xticks(rotation=45, ha='right')

    # Adjust layout for better visibility of x-axis labels
    plt.tight_layout()

    plt.show()

except FileNotFoundError:
    print(f"File not found at path: {file_path}")
except json.JSONDecodeError as e:
    print(f"Error decoding JSON file at path: {file_path}")
    print(f"Exception details: {e}")
except Exception as e:
    print(f"An error occurred: {e}")
